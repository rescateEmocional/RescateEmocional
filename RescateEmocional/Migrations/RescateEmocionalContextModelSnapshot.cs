// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using RescateEmocional.Models;

#nullable disable

namespace RescateEmocional.Migrations
{
    [DbContext(typeof(RescateEmocionalContext))]
    partial class RescateEmocionalContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.14")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("AdministradorOrganizacion", b =>
                {
                    b.Property<int>("Idadmin")
                        .HasColumnType("int")
                        .HasColumnName("IDAdmin");

                    b.Property<int>("Idorganizacion")
                        .HasColumnType("int")
                        .HasColumnName("IDOrganizacion");

                    b.HasKey("Idadmin", "Idorganizacion")
                        .HasName("PK__Administ__6F856700E8FDB013");

                    b.HasIndex("Idorganizacion");

                    b.ToTable("AdministradorOrganizacion", (string)null);
                });

            modelBuilder.Entity("AdministradorUsuario", b =>
                {
                    b.Property<int>("Idadmin")
                        .HasColumnType("int")
                        .HasColumnName("IDAdmin");

                    b.Property<int>("Idusuario")
                        .HasColumnType("int")
                        .HasColumnName("IDUsuario");

                    b.HasKey("Idadmin", "Idusuario")
                        .HasName("PK__Administ__5227E2FE10A09599");

                    b.HasIndex("Idusuario");

                    b.ToTable("AdministradorUsuario", (string)null);
                });

            modelBuilder.Entity("OrganizacionEtiquetum", b =>
                {
                    b.Property<int>("Idorganizacion")
                        .HasColumnType("int")
                        .HasColumnName("IDOrganizacion");

                    b.Property<int>("Idetiqueta")
                        .HasColumnType("int")
                        .HasColumnName("IDEtiqueta");

                    b.HasKey("Idorganizacion", "Idetiqueta")
                        .HasName("PK__Organiza__7688D34837D05AD2");

                    b.HasIndex("Idetiqueta");

                    b.ToTable("OrganizacionEtiqueta", (string)null);
                });

            modelBuilder.Entity("OrganizacionTelefono", b =>
                {
                    b.Property<int>("Idorganizacion")
                        .HasColumnType("int")
                        .HasColumnName("IDOrganizacion");

                    b.Property<int>("Idtelefono")
                        .HasColumnType("int")
                        .HasColumnName("IDTelefono");

                    b.HasKey("Idorganizacion", "Idtelefono")
                        .HasName("PK__Organiza__2DA0F3682484643B");

                    b.HasIndex("Idtelefono");

                    b.ToTable("OrganizacionTelefono", (string)null);
                });

            modelBuilder.Entity("RescateEmocional.Models.Administrador", b =>
                {
                    b.Property<int>("Idadmin")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("IDAdmin");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Idadmin"));

                    b.Property<string>("Contrasena")
                        .IsRequired()
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)");

                    b.Property<string>("CorreoElectronico")
                        .IsRequired()
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<int>("Idrol")
                        .HasColumnType("int")
                        .HasColumnName("IDRol");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.HasKey("Idadmin")
                        .HasName("PK__Administ__D704F3E832EA1F36");

                    b.HasIndex("Idrol");

                    b.HasIndex(new[] { "CorreoElectronico" }, "UQ__Administ__531402F320984443")
                        .IsUnique();

                    b.ToTable("Administrador", (string)null);
                });

            modelBuilder.Entity("RescateEmocional.Models.Conversacion", b =>
                {
                    b.Property<int>("Idconversacion")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("IDConversacion");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Idconversacion"));

                    b.Property<DateTime>("FechaInicio")
                        .HasColumnType("datetime");

                    b.Property<int?>("Idorganizacion")
                        .HasColumnType("int")
                        .HasColumnName("IDOrganizacion");

                    b.Property<int?>("Idusuario")
                        .HasColumnType("int")
                        .HasColumnName("IDUsuario");

                    b.Property<string>("Mensaje")
                        .HasColumnType("text");

                    b.Property<string>("SenderType")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Idconversacion")
                        .HasName("PK__Conversa__ED936DBBB0C2A385");

                    b.HasIndex("Idorganizacion");

                    b.HasIndex("Idusuario");

                    b.ToTable("Conversacion", (string)null);
                });

            modelBuilder.Entity("RescateEmocional.Models.Diario", b =>
                {
                    b.Property<int>("Iddiario")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("IDDiario");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Iddiario"));

                    b.Property<string>("Contenido")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime>("FechaCreacion")
                        .HasColumnType("datetime");

                    b.Property<int>("Idusuario")
                        .HasColumnType("int")
                        .HasColumnName("IDUsuario");

                    b.Property<string>("Titulo")
                        .IsRequired()
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.HasKey("Iddiario")
                        .HasName("PK__Diario__5F752C6285678152");

                    b.HasIndex("Idusuario");

                    b.ToTable("Diario", (string)null);
                });

            modelBuilder.Entity("RescateEmocional.Models.Etiquetum", b =>
                {
                    b.Property<int>("Idetiqueta")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("IDEtiqueta");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Idetiqueta"));

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.HasKey("Idetiqueta")
                        .HasName("PK__Etiqueta__E919DC2E2FEC45BB");

                    b.ToTable("Etiqueta");
                });

            modelBuilder.Entity("RescateEmocional.Models.Mensaje", b =>
                {
                    b.Property<int>("Idmensaje")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("IDMensaje");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Idmensaje"));

                    b.Property<string>("Contenido")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<byte>("Estado")
                        .HasColumnType("tinyint");

                    b.Property<DateTime>("FechaHora")
                        .HasColumnType("datetime");

                    b.Property<int>("Idconversacion")
                        .HasColumnType("int")
                        .HasColumnName("IDConversacion");

                    b.HasKey("Idmensaje")
                        .HasName("PK__Mensaje__104235383A4B3916");

                    b.HasIndex("Idconversacion");

                    b.ToTable("Mensaje", (string)null);
                });

            modelBuilder.Entity("RescateEmocional.Models.Organizacion", b =>
                {
                    b.Property<int>("Idorganizacion")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("IDOrganizacion");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Idorganizacion"));

                    b.Property<string>("Contrasena")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CorreoElectronico")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<byte>("Estado")
                        .HasColumnType("tinyint");

                    b.Property<string>("Horario")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<int>("Idrol")
                        .HasColumnType("int")
                        .HasColumnName("IDRol");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("Ubicacion")
                        .IsRequired()
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)");

                    b.HasKey("Idorganizacion")
                        .HasName("PK__Organiza__88194E8A26C39EC4");

                    b.HasIndex("Idrol");

                    b.ToTable("Organizacion", (string)null);
                });

            modelBuilder.Entity("RescateEmocional.Models.PeticionVerificacion", b =>
                {
                    b.Property<int>("Idpeticion")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("IDPeticion");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Idpeticion"));

                    b.Property<string>("Comentarios")
                        .HasColumnType("text");

                    b.Property<byte>("Estado")
                        .HasColumnType("tinyint");

                    b.Property<DateTime>("FechaSolicitud")
                        .HasColumnType("datetime");

                    b.Property<int>("Idadmin")
                        .HasColumnType("int")
                        .HasColumnName("IDAdmin");

                    b.Property<int>("Idorganizacion")
                        .HasColumnType("int")
                        .HasColumnName("IDOrganizacion");

                    b.HasKey("Idpeticion")
                        .HasName("PK__Peticion__1A9EBE04ECE4F7F9");

                    b.HasIndex("Idadmin");

                    b.HasIndex("Idorganizacion");

                    b.ToTable("PeticionVerificacion", (string)null);
                });

            modelBuilder.Entity("RescateEmocional.Models.Rol", b =>
                {
                    b.Property<int>("Idrol")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("IDRol");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Idrol"));

                    b.Property<string>("Descripcion")
                        .HasColumnType("text");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.HasKey("Idrol")
                        .HasName("PK__Rol__A681ACB68E85EFA2");

                    b.ToTable("Rol", (string)null);
                });

            modelBuilder.Entity("RescateEmocional.Models.Telefono", b =>
                {
                    b.Property<int>("Idtelefono")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("IDTelefono");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Idtelefono"));

                    b.Property<string>("TipoDeNumero")
                        .IsRequired()
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)");

                    b.HasKey("Idtelefono")
                        .HasName("PK__Telefono__5B9BDE2BE5CB0B38");

                    b.ToTable("Telefono", (string)null);
                });

            modelBuilder.Entity("RescateEmocional.Models.Usuario", b =>
                {
                    b.Property<int>("Idusuario")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("IDUsuario");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Idusuario"));

                    b.Property<string>("Contrasena")
                        .IsRequired()
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)");

                    b.Property<string>("CorreoElectronico")
                        .IsRequired()
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<byte>("Estado")
                        .HasColumnType("tinyint");

                    b.Property<int>("Idrol")
                        .HasColumnType("int")
                        .HasColumnName("IDRol");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("Telefono")
                        .IsRequired()
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)");

                    b.HasKey("Idusuario")
                        .HasName("PK__Usuario__523111694A0F809D");

                    b.HasIndex("Idrol");

                    b.HasIndex(new[] { "CorreoElectronico" }, "UQ__Usuario__531402F3DDBF84F2")
                        .IsUnique();

                    b.ToTable("Usuario", (string)null);
                });

            modelBuilder.Entity("AdministradorOrganizacion", b =>
                {
                    b.HasOne("RescateEmocional.Models.Administrador", null)
                        .WithMany()
                        .HasForeignKey("Idadmin")
                        .IsRequired()
                        .HasConstraintName("FK__Administr__IDAdm__5DCAEF64");

                    b.HasOne("RescateEmocional.Models.Organizacion", null)
                        .WithMany()
                        .HasForeignKey("Idorganizacion")
                        .IsRequired()
                        .HasConstraintName("FK__Administr__IDOrg__5EBF139D");
                });

            modelBuilder.Entity("AdministradorUsuario", b =>
                {
                    b.HasOne("RescateEmocional.Models.Administrador", null)
                        .WithMany()
                        .HasForeignKey("Idadmin")
                        .IsRequired()
                        .HasConstraintName("FK__Administr__IDAdm__59FA5E80");

                    b.HasOne("RescateEmocional.Models.Usuario", null)
                        .WithMany()
                        .HasForeignKey("Idusuario")
                        .IsRequired()
                        .HasConstraintName("FK__Administr__IDUsu__5AEE82B9");
                });

            modelBuilder.Entity("OrganizacionEtiquetum", b =>
                {
                    b.HasOne("RescateEmocional.Models.Etiquetum", null)
                        .WithMany()
                        .HasForeignKey("Idetiqueta")
                        .IsRequired()
                        .HasConstraintName("FK__Organizac__IDEti__48CFD27E");

                    b.HasOne("RescateEmocional.Models.Organizacion", null)
                        .WithMany()
                        .HasForeignKey("Idorganizacion")
                        .IsRequired()
                        .HasConstraintName("FK__Organizac__IDOrg__47DBAE45");
                });

            modelBuilder.Entity("OrganizacionTelefono", b =>
                {
                    b.HasOne("RescateEmocional.Models.Organizacion", null)
                        .WithMany()
                        .HasForeignKey("Idorganizacion")
                        .IsRequired()
                        .HasConstraintName("FK__Organizac__IDOrg__4222D4EF");

                    b.HasOne("RescateEmocional.Models.Telefono", null)
                        .WithMany()
                        .HasForeignKey("Idtelefono")
                        .IsRequired()
                        .HasConstraintName("FK__Organizac__IDTel__4316F928");
                });

            modelBuilder.Entity("RescateEmocional.Models.Administrador", b =>
                {
                    b.HasOne("RescateEmocional.Models.Rol", "IdrolNavigation")
                        .WithMany("Administradors")
                        .HasForeignKey("Idrol")
                        .IsRequired()
                        .HasConstraintName("FK__Administr__IDRol__4CA06362");

                    b.Navigation("IdrolNavigation");
                });

            modelBuilder.Entity("RescateEmocional.Models.Conversacion", b =>
                {
                    b.HasOne("RescateEmocional.Models.Organizacion", "IdorganizacionNavigation")
                        .WithMany("Conversacions")
                        .HasForeignKey("Idorganizacion")
                        .HasConstraintName("FK__Conversac__IDOrg__5441852A");

                    b.HasOne("RescateEmocional.Models.Usuario", "IdusuarioNavigation")
                        .WithMany("Conversacions")
                        .HasForeignKey("Idusuario")
                        .HasConstraintName("FK__Conversac__IDUsu__534D60F1");

                    b.Navigation("IdorganizacionNavigation");

                    b.Navigation("IdusuarioNavigation");
                });

            modelBuilder.Entity("RescateEmocional.Models.Diario", b =>
                {
                    b.HasOne("RescateEmocional.Models.Usuario", "IdusuarioNavigation")
                        .WithMany("Diarios")
                        .HasForeignKey("Idusuario")
                        .IsRequired()
                        .HasConstraintName("FK__Diario__IDUsuari__619B8048");

                    b.Navigation("IdusuarioNavigation");
                });

            modelBuilder.Entity("RescateEmocional.Models.Mensaje", b =>
                {
                    b.HasOne("RescateEmocional.Models.Conversacion", "IdconversacionNavigation")
                        .WithMany("Mensajes")
                        .HasForeignKey("Idconversacion")
                        .IsRequired()
                        .HasConstraintName("FK__Mensaje__IDConve__571DF1D5");

                    b.Navigation("IdconversacionNavigation");
                });

            modelBuilder.Entity("RescateEmocional.Models.Organizacion", b =>
                {
                    b.HasOne("RescateEmocional.Models.Rol", "IdrolNavigation")
                        .WithMany("Organizacions")
                        .HasForeignKey("Idrol")
                        .IsRequired()
                        .HasConstraintName("FK__Organizac__IDRol__3D5E1FD2");

                    b.Navigation("IdrolNavigation");
                });

            modelBuilder.Entity("RescateEmocional.Models.PeticionVerificacion", b =>
                {
                    b.HasOne("RescateEmocional.Models.Administrador", "IdadminNavigation")
                        .WithMany("PeticionVerificacions")
                        .HasForeignKey("Idadmin")
                        .IsRequired()
                        .HasConstraintName("FK__PeticionV__IDAdm__5070F446");

                    b.HasOne("RescateEmocional.Models.Organizacion", "IdorganizacionNavigation")
                        .WithMany("PeticionVerificacions")
                        .HasForeignKey("Idorganizacion")
                        .IsRequired()
                        .HasConstraintName("FK__PeticionV__IDOrg__4F7CD00D");

                    b.Navigation("IdadminNavigation");

                    b.Navigation("IdorganizacionNavigation");
                });

            modelBuilder.Entity("RescateEmocional.Models.Usuario", b =>
                {
                    b.HasOne("RescateEmocional.Models.Rol", "IdrolNavigation")
                        .WithMany("Usuarios")
                        .HasForeignKey("Idrol")
                        .IsRequired()
                        .HasConstraintName("FK__Usuario__IDRol__3A81B327");

                    b.Navigation("IdrolNavigation");
                });

            modelBuilder.Entity("RescateEmocional.Models.Administrador", b =>
                {
                    b.Navigation("PeticionVerificacions");
                });

            modelBuilder.Entity("RescateEmocional.Models.Conversacion", b =>
                {
                    b.Navigation("Mensajes");
                });

            modelBuilder.Entity("RescateEmocional.Models.Organizacion", b =>
                {
                    b.Navigation("Conversacions");

                    b.Navigation("PeticionVerificacions");
                });

            modelBuilder.Entity("RescateEmocional.Models.Rol", b =>
                {
                    b.Navigation("Administradors");

                    b.Navigation("Organizacions");

                    b.Navigation("Usuarios");
                });

            modelBuilder.Entity("RescateEmocional.Models.Usuario", b =>
                {
                    b.Navigation("Conversacions");

                    b.Navigation("Diarios");
                });
#pragma warning restore 612, 618
        }
    }
}

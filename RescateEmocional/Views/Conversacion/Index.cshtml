@model IEnumerable<RescateEmocional.Models.Conversacion>

@{
    ViewData["Title"] = "Index";
    int authenticatedUserId = ViewData["AuthenticatedUserId"] != null ? (int)ViewData["AuthenticatedUserId"] : 0;
    int authenticatedOrgId = ViewData["AuthenticatedOrgId"] != null ? (int)ViewData["AuthenticatedOrgId"] : 0;
    string userRole = ViewData["UserRole"]?.ToString() ?? "Desconocido";
    string userName = ViewData["UserName"]?.ToString() ?? "No disponible";
}

<div class="messaging-container">
    <div class="chat-header">
        <h1>Conversación</h1>

        @if (userRole == "Usuario")
        {
            <a asp-action="Create" class="new-message-btn">+ Nuevo Mensaje</a>
        }
        else if (userRole == "Organizacion")
        {
            <a asp-action="Create" class="new-message-btn">+ Responder</a>
        }
    </div>

    <div class="chat-window">
        @if (Model != null && Model.Any())
        {
            @foreach (var item in Model)
            {
                // Determinar si el mensaje es propio según el rol del usuario autenticado
                bool isOwnMessage = (userRole == "Usuario" && item.Idusuario == authenticatedUserId) ||
                (userRole == "Organizacion" && item.Idorganizacion == authenticatedOrgId);

                // Determinar si el mensaje fue enviado por un usuario o una organización
                bool isFromUser = item.Idusuario == authenticatedUserId;
                bool isFromOrganization = item.Idorganizacion == authenticatedOrgId;

                // Asegurar que los mensajes estén asignados al emisor correcto
                string senderName = isFromUser
                ? "Yo"
                : (userRole == "Usuario"
                ? "Org: " + (item.IdorganizacionNavigation?.Nombre ?? "Desconocido")
                : "Usuario: " + (item.IdusuarioNavigation?.Nombre ?? "Desconocido"));

                // Clase CSS para diferenciar mensajes propios y ajenos
                string messageClass = isOwnMessage ? "own-message" : "other-message";

                <div class="message @messageClass">
                    <div class="message-content">
                        <div class="message-text">
                            @Html.DisplayFor(modelItem => item.Mensaje)
                        </div>
                        <div class="message-info">
                            <span class="sender">@senderName</span>
                            <span class="timestamp">@Html.DisplayFor(modelItem => item.FechaInicio)</span>
                        </div>
                        <div class="message-actions">
                            @if (userRole == "Usuario" && isOwnMessage)
                            {
                                <a asp-action="Edit" asp-route-id="@item.Idconversacion" class="action-btn edit">Editar</a>
                                <a asp-action="Delete" asp-route-id="@item.Idconversacion" class="action-btn delete">Eliminar</a>
                            }
                            <a asp-action="Details" asp-route-id="@item.Idconversacion" class="action-btn details">Ver</a>
                        </div>
                    </div>
                </div>
            }
        }
        else
        {
            <p>No hay conversaciones disponibles.</p>
        }
    </div>
</div>

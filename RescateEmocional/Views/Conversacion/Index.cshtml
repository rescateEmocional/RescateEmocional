@model IEnumerable<RescateEmocional.Models.Conversacion>

@{
    ViewData["Title"] = "Index";
    int authenticatedUserId = ViewData["AuthenticatedUserId"] != null ? (int)ViewData["AuthenticatedUserId"] : 0;
    int authenticatedOrgId = ViewData["AuthenticatedOrgId"] != null ? (int)ViewData["AuthenticatedOrgId"] : 0;
    string userRole = ViewData["UserRole"]?.ToString() ?? "Desconocido";
    string userName = ViewData["UserName"]?.ToString() ?? "No disponible";
}

<div class="messaging-container">
    <div class="chat-header">
        <h1>Conversación</h1>
        <p>Usuario autenticado: @userName (UserID: @authenticatedUserId, OrgID: @authenticatedOrgId, Rol: @userRole)</p>
        @if (userRole == "Usuario")
        {
            <a asp-action="Create" class="new-message-btn">+ Nuevo Mensaje</a>
        }
        else if (userRole == "Organizacion")
        {
            <a asp-action="Create" class="new-message-btn">+ Responder</a>
        }
    </div>

    <div class="chat-window">
        @if (Model != null && Model.Any())
        {
            @foreach (var item in Model)
            {
                // Determinar si el mensaje fue enviado por un usuario o una organización
                // Si Idusuario coincide con authenticatedUserId y el rol es "Usuario", o si Idorganizacion es 0, es un mensaje de usuario
                bool isUserMessage = (item.Idusuario == authenticatedUserId && userRole == "Usuario") || item.Idorganizacion == 0;
                // Si Idorganizacion coincide con authenticatedOrgId y el rol es "Organizacion", o si Idusuario es 0, es un mensaje de organización
                bool isOrgMessage = (item.Idorganizacion == authenticatedOrgId && userRole == "Organizacion") || item.Idusuario == 0;

                // Determinar la clase CSS según quién envió el mensaje
                string messageClass = isUserMessage ? "user-message" : "org-message";

                <div class="message @messageClass">
                    <div class="message-content">
                        <div class="message-text">
                            @Html.DisplayFor(modelItem => item.Mensaje)
                        </div>
                        <div class="message-info">
                            <span class="sender">
                                @(isUserMessage ? "Usuario: " + Html.DisplayFor(modelItem => item.IdusuarioNavigation.Nombre) : "Org: " + Html.DisplayFor(modelItem => item.IdorganizacionNavigation.Nombre))
                            </span>
                            <span class="timestamp">
                                @Html.DisplayFor(modelItem => item.FechaInicio)
                            </span>
                        </div>
                        <div class="message-actions">
                            @if (userRole == "Usuario" && item.Idusuario == authenticatedUserId)
                            {
                                <a asp-action="Edit" asp-route-id="@item.Idconversacion" class="action-btn edit">Editar</a>
                                <a asp-action="Delete" asp-route-id="@item.Idconversacion" class="action-btn delete">Eliminar</a>
                            }
                            <a asp-action="Details" asp-route-id="@item.Idconversacion" class="action-btn details">Ver</a>
                        </div>
                        <!-- Información de depuración -->
                        <div class="debug-info">
                            <small>Idusuario: @item.Idusuario, Idorganizacion: @item.Idorganizacion, isUserMessage: @isUserMessage, isOrgMessage: @isOrgMessage, UserRole: @userRole</small>
                        </div>
                    </div>
                </div>
            }
        }
        else
        {
            <p>No hay conversaciones disponibles.</p>
        }
    </div>
</div>

<style>
    .messaging-container {
        max-width: 800px;
        margin: 20px auto;
        font-family: Arial, sans-serif;
    }

    .chat-header {
        display: flex;
        justify-content: space-between;
        align-items: center;
        padding: 15px;
        background: #075E54;
        color: white;
        border-radius: 10px 10px 0 0;
    }

    .new-message-btn {
        background: #128C7E;
        color: white;
        padding: 8px 15px;
        border-radius: 20px;
        text-decoration: none;
    }

    .chat-window {
        background: #ECE5DD;
        padding: 20px;
        border-radius: 0 0 10px 10px;
        box-shadow: 0 2px 5px rgba(0,0,0,0.1);
        min-height: 400px;
        max-height: 600px;
        overflow-y: auto;
    }

    .message {
        margin-bottom: 15px;
        max-width: 70%;
    }

    .user-message {
        margin-left: auto;
        text-align: right;
    }

    .org-message {
        margin-right: auto;
        text-align: left;
    }

    .message-content {
        display: inline-block;
        padding: 10px;
        border-radius: 10px;
        background: white;
    }

    .user-message .message-content {
        background: #DCF8C6; /* Verde claro para mensajes de usuarios */
    }

    .org-message .message-content {
        background: #FFFFFF; /* Blanco para mensajes de organizaciones */
    }

    .message-text {
        color: #333;
        word-wrap: break-word;
    }

    .message-info {
        margin-top: 5px;
        font-size: 0.8em;
        color: #666;
        display: flex;
        justify-content: space-between;
    }

    .sender {
        font-weight: bold;
        margin-right: 10px;
    }

    .timestamp {
        color: #999;
    }

    .message-actions {
        margin-top: 5px;
        display: flex;
        gap: 10px;
    }

    .user-message .message-actions {
        justify-content: flex-end;
    }

    .org-message .message-actions {
        justify-content: flex-start;
    }

    .action-btn {
        text-decoration: none;
        padding: 5px 10px;
        border-radius: 15px;
        font-size: 0.9em;
    }

    .edit {
        background: #25D366;
        color: white;
    }

    .details {
        background: #34B7F1;
        color: white;
    }

    .delete {
        background: #EE5555;
        color: white;
    }

    .debug-info {
        margin-top: 5px;
        font-size: 0.7em;
        color: #888;
    }
</style>
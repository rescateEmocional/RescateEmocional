@model RescateEmocional.Models.Organizacion
@{
    ViewData["Title"] = "Crear Organización";
}

<div class="container mt-5">
    <div class="card shadow-lg">
        <div class="card-header bg-primary text-white">
            <h2 class="display-5 mb-0"><i class="bi bi-building me-2"></i>@ViewData["Title"]</h2>
        </div>
        <div class="card-body">
            <form asp-action="Create" class="needs-validation" novalidate id="organizacionForm">
                <div asp-validation-summary="ModelOnly" class="alert alert-danger"></div>

                <div class="row g-4">
                    <!-- Campo Oculto para Estado (Activo por defecto) -->
                    <input type="hidden" asp-for="Estado" value="1" />

                    <div class="col-md-6">
                        <div class="form-floating">
                            <input asp-for="Nombre" class="form-control" placeholder=" " />
                            <label asp-for="Nombre" class="form-label"></label>
                            <span asp-validation-for="Nombre" class="text-danger small"></span>
                        </div>
                    </div>

                    <div class="col-md-6">
                        <div class="form-floating">
                            <input asp-for="Horario" class="form-control" placeholder=" " />
                            <label asp-for="Horario" class="form-label"></label>
                            <span asp-validation-for="Horario" class="text-danger small"></span>
                        </div>
                    </div>

                    <div class="col-12">
                        <div class="form-floating">
                            <input asp-for="Descripcion" class="form-control" placeholder=" " />
                            <label asp-for="Descripcion" class="form-label"></label>
                            <span asp-validation-for="Descripcion" class="text-danger small"></span>
                        </div>
                    </div>

                    <div class="col-md-6">
                        <div class="form-floating">
                            <input asp-for="Ubicacion" class="form-control" placeholder=" " />
                            <label asp-for="Ubicacion" class="form-label"></label>
                            <span asp-validation-for="Ubicacion" class="text-danger small"></span>
                        </div>
                    </div>

                    <!-- Campo Correo Electrónico -->
                    <div class="col-md-6">
                        <div class="form-floating">
                            <input asp-for="CorreoElectronico" type="email" class="form-control" placeholder=" " required />
                            <label>Correo Electrónico</label>
                            <span asp-validation-for="CorreoElectronico" class="text-danger small" id="emailError"></span>
                        </div>
                    </div>

                    <div class="col-md-6">
                        <div class="form-floating">
                            <input asp-for="Contrasena" type="password" class="form-control" placeholder=" " required />
                            <label asp-for="Contrasena" class="form-label"></label>
                            <span asp-validation-for="Contrasena" class="text-danger small"></span>
                        </div>
                    </div>

                    <div class="col-md-6">
                        <div class="form-floating">
                            <select asp-for="Idrol" class="form-select">
                                <option value="2" selected>Organización</option>
                            </select>
                            <label class="form-label">Rol</label>
                            <span asp-validation-for="Idrol" class="text-danger small"></span>
                        </div>
                    </div>
                </div>

                <div class="mt-4 d-flex justify-content-between">
                    <a asp-action="Index" class="btn btn-outline-secondary">
                        <i class="bi bi-arrow-left-circle me-2"></i>Volver al listado
                    </a>
                    <button type="submit" class="btn btn-primary btn-lg" id="submitBtn">
                        <i class="bi bi-save me-2"></i>Guardar Organización
                    </button>
                </div>
            </form>
        </div>
    </div>
</div>

@section Scripts {
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }

    <script>
        document.addEventListener('DOMContentLoaded', function() {
            const form = document.getElementById('organizacionForm');
            const submitBtn = document.getElementById('submitBtn');
            const emailError = document.querySelector('[data-valmsg-for="CorreoElectronico"]');

            form.addEventListener('submit', async function(event) {
                event.preventDefault();

                emailError.textContent = '';

                if (!form.checkValidity()) {
                    form.classList.add('was-validated');
                    return;
                }

                submitBtn.disabled = true;
                submitBtn.innerHTML = '<span class="spinner-border spinner-border-sm"></span> Guardando...';

                try {
                    const formData = new FormData(form);
                    const response = await fetch(form.action, {
                        method: 'POST',
                        body: formData,
                        headers: {
                            'RequestVerificationToken': document.querySelector('input[name="__RequestVerificationToken"]').value
                        }
                    });

                    // Verificar si es una redirección
                    if (response.redirected) {
                        window.location.href = response.url;
                        return;
                    }

                    // Manejar errores
                    const responseText = await response.text();
                    const parser = new DOMParser();
                    const htmlDoc = parser.parseFromString(responseText, 'text/html');

                    // Extraer errores del HTML de respuesta
                    const serverEmailError = htmlDoc.querySelector('[data-valmsg-for="CorreoElectronico"]');

                    if (serverEmailError) {
                        emailError.textContent = serverEmailError.textContent;
                    }

                } catch (error) {
                    console.error('Error:', error);
                    emailError.textContent = 'Error de conexión con el servidor';
                } finally {
                    submitBtn.disabled = false;
                    submitBtn.innerHTML = '<i class="bi bi-save me-2"></i>Guardar Organización';
                }
            });
        });
    </script>
}